!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.PointEmitter=t():n.PointEmitter=t()}(this,(function(){return function(n){var t={};function e(c){if(t[c])return t[c].exports;var l=t[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,e),l.l=!0,l.exports}return e.m=n,e.c=t,e.d=function(n,t,c){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:c})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(e.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var l in n)e.d(c,l,function(t){return n[t]}.bind(null,l));return c},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar EVENT_TYPE;\r\n(function (EVENT_TYPE) {\r\n    EVENT_TYPE["BEFORE_SELECT"] = "BEFORE_SELECT";\r\n    EVENT_TYPE["SELECT_START"] = "SELECT_START";\r\n    EVENT_TYPE["SELECTING"] = "SELECTING";\r\n    EVENT_TYPE["SELECT"] = "SELECT";\r\n    EVENT_TYPE["CLICK"] = "CLICK";\r\n    EVENT_TYPE["DB_CLICK"] = "DB_CLICK";\r\n    EVENT_TYPE["TOUCH_EDGES"] = "TOUCH_EDGES";\r\n    EVENT_TYPE["BEFORE_CREATE_GHOST"] = "BEFORE_CREATE_GHOST";\r\n    EVENT_TYPE["RESET"] = "RESET";\r\n})(EVENT_TYPE || (EVENT_TYPE = {}));\r\nvar DIRECTION;\r\n(function (DIRECTION) {\r\n    DIRECTION["TOP"] = "TOP";\r\n    DIRECTION["RIGHT"] = "RIGHT";\r\n    DIRECTION["BOTTOM"] = "BOTTOM";\r\n    DIRECTION["LEFT"] = "LEFT";\r\n})(DIRECTION || (DIRECTION = {}));\r\nvar PointEmitter = /** @class */ (function () {\r\n    function PointEmitter(node, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.longPressThreshold, longPressThreshold = _c === void 0 ? 250 : _c, _d = _b.gridMovement, gridMovement = _d === void 0 ? 0 : _d, _e = _b.ghost, ghost = _e === void 0 ? { enable: false } : _e;\r\n        this.clickTolerance = 5;\r\n        this.clickInterval = 250;\r\n        this.currentWindowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        this.currentWindowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n        this.destroy = function () {\r\n            _this.node = null;\r\n            _this.listeners = Object.create(null);\r\n            _this.initialEventData = null;\r\n            _this.origDistanceFromXToNode = null;\r\n            _this.origDistanceFromYToNode = null;\r\n            _this.selecting = false;\r\n            _this.selectEventData = null;\r\n            _this.lastClickData = null;\r\n            _this.removeInitialEventListener && _this.removeInitialEventListener();\r\n            _this.removeMoveListener && _this.removeMoveListener();\r\n            _this.removeEndListener && _this.removeEndListener();\r\n            _this.removeKeyListener && _this.removeKeyListener();\r\n            _this.removeTouchMoveWindowListener && _this.removeTouchMoveWindowListener();\r\n        };\r\n        /* getter setter */\r\n        /* wrapper for add event listener */\r\n        this.listener = function (type, handler, target) {\r\n            target && target.addEventListener(type, handler, { passive: false });\r\n            !target && _this.node.addEventListener(type, handler, { passive: false });\r\n            return function () {\r\n                target && target.removeEventListener(type, handler, { passive: false });\r\n                !target && _this.node.removeEventListener(type, handler);\r\n            };\r\n        };\r\n        /* wrapper for add event listener */\r\n        /*  */\r\n        this.getBoundingRect = function (node) {\r\n            if (!node)\r\n                return;\r\n            var nodeBox = node.getBoundingClientRect();\r\n            return {\r\n                top: nodeBox.top,\r\n                left: nodeBox.left,\r\n                width: nodeBox.width,\r\n                height: nodeBox.height,\r\n            };\r\n        };\r\n        /*  */\r\n        /* Listen for mousedown & touchstart. When one is received, disabled the other and setup future event base on type */\r\n        this.onInitialEventListener = function () {\r\n            if (!_this.node)\r\n                return;\r\n            var removeTouchStartListener = _this.listener("touchstart", function (e) {\r\n                _this.removeInitialEventListener();\r\n                _this.removeInitialEventListener = _this.onAddLongPressListener(_this.onHandleEventListener, e);\r\n            });\r\n            var removeMouseDownListener = _this.listener("mousedown", function (e) {\r\n                _this.removeInitialEventListener();\r\n                _this.onHandleEventListener(e);\r\n                _this.removeInitialEventListener = _this.listener("mousedown", _this.onHandleEventListener);\r\n            });\r\n            _this.removeInitialEventListener = function () {\r\n                removeTouchStartListener();\r\n                removeMouseDownListener();\r\n            };\r\n        };\r\n        /* Listen for mousedown & touchstart. When one is received, disabled the other and setup future event base on type */\r\n        /* handling event */\r\n        this.onHandleEventListener = function (e) {\r\n            var _a = _this.getEventCoords(e), isTouch = _a.isTouch, x = _a.x, y = _a.y;\r\n            var _b = _this.getBoundingRect(_this.node), top = _b.top, left = _b.left;\r\n            _this.origDistanceFromYToNode = y - top;\r\n            _this.origDistanceFromXToNode = x - left;\r\n            _this.selectEventData = { x: x, y: y };\r\n            _this.initialEventData = { isTouch: isTouch, x: x, y: y };\r\n            _this.onCreateGhostEl(_this.node);\r\n            _this.emit(EVENT_TYPE.BEFORE_SELECT, _this.initialEventData);\r\n            switch (e.type) {\r\n                case "touchstart":\r\n                    _this.removeMoveListener = _this.listener("touchmove", _this.onMoveListener, window);\r\n                    _this.removeEndListener = _this.listener("touchend", _this.onEndListener, window);\r\n                    _this.removeKeyListener = _this.listener("keydown", _this.onEndListener, window);\r\n                    break;\r\n                case "mousedown":\r\n                    _this.removeMoveListener = _this.listener("mousemove", _this.onMoveListener, window);\r\n                    _this.removeEndListener = _this.listener("mouseup", _this.onEndListener, window);\r\n                    _this.removeKeyListener = _this.listener("keydown", _this.onEndListener, window);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        /* add long press listener if user touch the screen without moving their finger for 250ms */\r\n        this.onAddLongPressListener = function (handleEventListener, e) {\r\n            var longPressTimer = null;\r\n            var removeTouchMoveListener = null;\r\n            var removeToucEndListener = null;\r\n            var cleanup = function () {\r\n                longPressTimer && clearTimeout(longPressTimer);\r\n                removeTouchMoveListener && removeTouchMoveListener();\r\n                removeToucEndListener && removeToucEndListener();\r\n                longPressTimer = null;\r\n                removeTouchMoveListener = null;\r\n                removeToucEndListener = null;\r\n            };\r\n            var onTouchStart = function (e) {\r\n                longPressTimer = setTimeout(function () {\r\n                    cleanup();\r\n                    handleEventListener(e);\r\n                }, _this.longPressThreshold);\r\n                removeTouchMoveListener = _this.listener("touchmove", function () { return cleanup(); });\r\n                removeToucEndListener = _this.listener("touchend", function () { return cleanup(); });\r\n            };\r\n            var removeTouchStartListener = _this.listener("touchstart", onTouchStart);\r\n            e && onTouchStart(e);\r\n            return function () {\r\n                cleanup();\r\n                removeTouchStartListener();\r\n            };\r\n        };\r\n        this.onMoveListener = function (e) {\r\n            if (!_this.initialEventData)\r\n                return;\r\n            var _a = _this.initialEventData, initX = _a.x, initY = _a.y;\r\n            var _b = _this.getEventCoords(e), x = _b.x, y = _b.y;\r\n            var origSelecting = _this.selecting, distanceFromInitXToX = Math.abs(initX - x), distanceFromInitYToY = Math.abs(initY - y), click = _this.isClick(x, y);\r\n            // Prevent emitting selectStart event until mouse is moved.\r\n            // in Chrome on Windows, mouseMove event may be fired just after mouseDown event.\r\n            if (_this.isClick(x, y) && !origSelecting && !(distanceFromInitXToX || distanceFromInitYToY))\r\n                return;\r\n            var afterX = x - _this.origDistanceFromXToNode;\r\n            var afterY = y - _this.origDistanceFromYToNode;\r\n            if (_this.gridMovement) {\r\n                afterX = _this.calcGridMovement(afterX);\r\n                afterY = _this.calcGridMovement(afterY);\r\n            }\r\n            _this.selectEventData = { x: afterX, y: afterY };\r\n            _this.selecting = true;\r\n            !origSelecting && _this.emit(EVENT_TYPE.SELECT_START, { x: initX, y: initY });\r\n            !click && _this.emit(EVENT_TYPE.SELECTING, _this.selectEventData);\r\n            var _c = _this.touchEdges(x, y), touch = _c.touch, dir = _c.dir;\r\n            if (touch) {\r\n                return _this.emit(EVENT_TYPE.TOUCH_EDGES, __assign(__assign({}, _this.selectEventData), { dir: dir }));\r\n            }\r\n            e.preventDefault();\r\n        };\r\n        this.onEndListener = function (e) {\r\n            if (!_this.initialEventData)\r\n                return;\r\n            _this.onDelGhostEl();\r\n            _this.removeMoveListener && _this.removeMoveListener();\r\n            _this.removeEndListener && _this.removeEndListener();\r\n            _this.removeKeyListener && _this.removeKeyListener();\r\n            _this.selecting = false;\r\n            var inRoot = _this.node.contains(e.target);\r\n            var _a = _this.getEventCoords(e), x = _a.x, y = _a.y;\r\n            var click = _this.isClick(x, y);\r\n            if (e.key) {\r\n                return _this.emit(EVENT_TYPE.RESET, _this.selectEventData);\r\n            }\r\n            if (click && inRoot)\r\n                return _this.onClickListener(e);\r\n            if (!click)\r\n                return _this.emit(EVENT_TYPE.SELECT, _this.selectEventData);\r\n        };\r\n        this.onClickListener = function (e) {\r\n            var _a = _this.getEventCoords(e), x = _a.x, y = _a.y;\r\n            var now = new Date().getTime();\r\n            if (_this.lastClickData && now - _this.lastClickData <= _this.clickInterval) {\r\n                _this.lastClickData = null;\r\n                return _this.emit(EVENT_TYPE.DB_CLICK, { x: x, y: y });\r\n            }\r\n            _this.lastClickData = now;\r\n            return _this.emit(EVENT_TYPE.CLICK, { x: x, y: y });\r\n        };\r\n        this.getEventCoords = function (e) {\r\n            var coords = {\r\n                isTouch: false,\r\n                x: e.pageX,\r\n                y: e.pageY,\r\n            };\r\n            /* if (e.touches && e.touches.length) {\r\n              coords.isTouch = true;\r\n              coords.x = e.touches[0].pageX;\r\n              coords.y = e.touches[0].pageY;\r\n            } */\r\n            /* try new way =)) */\r\n            e.touches &&\r\n                e.touches.length &&\r\n                ((coords.isTouch = true), (coords.x = e.touches[0].pageX), (coords.y = e.touches[0].pageY));\r\n            return coords;\r\n        };\r\n        this.isClick = function (currX, currY) {\r\n            var _a = _this.initialEventData, isTouch = _a.isTouch, x = _a.x, y = _a.y;\r\n            return !isTouch && Math.abs(currX - x) <= _this.clickTolerance && Math.abs(currY - y) <= _this.clickTolerance;\r\n        };\r\n        this.touchEdges = function (x, y) {\r\n            var _a = _this.getBoundingRect(_this.node), width = _a.width, height = _a.height;\r\n            var afterX = x - _this.origDistanceFromXToNode;\r\n            var afterY = y - _this.origDistanceFromYToNode;\r\n            if (afterX < 0) {\r\n                return { touch: true, dir: DIRECTION.LEFT };\r\n            }\r\n            if (afterX + width > _this.currentWindowWidth) {\r\n                return { touch: true, dir: DIRECTION.RIGHT };\r\n            }\r\n            if (afterY < 0) {\r\n                return { touch: true, dir: DIRECTION.TOP };\r\n            }\r\n            if (afterY + height > _this.currentWindowHeight) {\r\n                return { touch: true, dir: DIRECTION.BOTTOM };\r\n            }\r\n            return { touch: false, dir: null };\r\n        };\r\n        this.calcGridMovement = function (currPosition) {\r\n            return Math.floor(currPosition / _this.gridMovement) * _this.gridMovement;\r\n        };\r\n        /* handling event */\r\n        /* DOM manipulation */\r\n        this.onCreateGhostEl = function (node) {\r\n            // create ghost el\r\n            if (_this.ghost && _this.ghost.enable) {\r\n                var ghost = node.cloneNode(true);\r\n                ghost.id = "pe-ghost";\r\n                if (_this.ghost.style) {\r\n                    for (var s in _this.ghost.style) {\r\n                        if (_this.ghost.style[s]) {\r\n                            ghost.style[s] = _this.ghost.style[s];\r\n                        }\r\n                    }\r\n                }\r\n                _this.emit(EVENT_TYPE.BEFORE_CREATE_GHOST, ghost);\r\n                _this.bodyEl.insertBefore(ghost, node);\r\n            }\r\n        };\r\n        this.onDelGhostEl = function () { return _this.ghost && _this.ghost.enable && document.querySelector("#pe-ghost").remove(); };\r\n        /* DOM manipulation */\r\n        /* Inspire by EventEmiiter, turnsout it\'s PubSub pattern */\r\n        this.on = function (type, handler) {\r\n            var idx = (_this.listeners[type] || (_this.listeners[type] = [])).push(handler) - 1;\r\n            return {\r\n                off: function () {\r\n                    this.listeners[type].splice(idx, 1);\r\n                },\r\n            };\r\n        };\r\n        this.emit = function (type) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            (_this.listeners[type] || []).forEach(function (fn) {\r\n                fn.apply(void 0, args);\r\n            });\r\n        };\r\n        this.node = node;\r\n        this.listeners = Object.create(null);\r\n        this.selecting = false;\r\n        this.longPressThreshold = longPressThreshold;\r\n        this.gridMovement = gridMovement;\r\n        this.ghost = ghost;\r\n        this.bodyEl = document.querySelector("body");\r\n        // Fixes an iOS 10 bug where scrolling could not be prevented on the window.\r\n        this.removeTouchMoveWindowListener = this.listener("touchmove", function () { }, window);\r\n        this.onInitialEventListener();\r\n    }\r\n    Object.defineProperty(PointEmitter.prototype, "getNode", {\r\n        /* getter setter */\r\n        get: function () {\r\n            return this.node;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointEmitter.prototype, "getListeners", {\r\n        get: function () {\r\n            return this.listeners;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PointEmitter;\r\n}());\r\n/* harmony default export */ __webpack_exports__["default"] = (PointEmitter);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]).default}));